---
- name: install and configure nextcloud
  hosts: SERVERS
  become: true
  
  vars:
    mysql_root_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65646534353964363938333064306237336465376265353338653339363566303535303139646132
          6266336363383261303137336363643462373762313164310a666135383838653139356338626634
          39643233396262396565393664633465353836613666663264653130393364323536626437663638
          3235303538636264340a383438366535306538346563373538343662316563326131376536376338
          3433

    mysql_nextcloud_password: NewPassword
    
  pre_tasks:

    - name: install all updates
      package:
        name: "*"
        state: "latest"
  tasks:
    
    - name: install required packages
      package:
        name:
          - epel-release
          - yum-utils
          - unzip
          - curl
          - wget
          - bash-completion
          - policycoreutils-python-utils
          - mlocate
          - bzip2
          - mariadb-server
          - httpd #apache
        state: "latest"

    - name: copy nextcloud.config
      copy:
        src: nextcloud.conf
        dest: /etc/httpd/conf.d/nextcloud.conf
    
    - name: Enable and start httpd systemd service
      ansible.builtin.systemd:
        state: started
        name: httpd
        enabled: yes
    
    # Installing PHP onto Centos 8
    - name: install remi rpm
      dnf:
        name: https://rpms.remirepo.net/enterprise/remi-release-8.rpm
        disable_gpg_check: no
        state: present
      when: ansible_distribution  == 'CentOS' and   ansible_distribution_major_version  == '8'
      
    - name: enable module stream for remi
      command: dnf module reset php -y
      when: ansible_distribution  == 'CentOS' and   ansible_distribution_major_version  == '8'
      changed_when: false
      
    - name: install module php:remi-7.4
      command: dnf module install php:remi-7.4 -y
      when: ansible_distribution  == 'CentOS' and   ansible_distribution_major_version  == '8'
      
    - name: install php 7.4
      package:
        name:
          - php 
          - php-gd
          - php-mbstring
          - php-intl
          - php-pecl-apcu
          - php-mysqlnd
          - php-opcache
          - php-json
          - php-zip
          - php-redis
          - php-imagick
        state: latest
    
    # Installing and configuring mariadb on Centos 8
    # https://www.theurbanpenguin.com/installing-mariadb-using-ansible/
    - name: install mariadb
      package:
        name: 
          - mariadb-server
          - python3-PyMySQL
        state: latest
      
    - name: start mariadb
      service:
        name: mariadb
        enabled: true
        state: started
    
    - name: set mysql root password
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        user: root
        check_implicit_admin: yes
        password: "{{ mysql_root_password }}"
        host: localhost
        priv: "*.*:ALL,GRANT"
    # https://docs.ansible.com/ansible/2.8/modules/mysql_db_module.html
    
    - name: Create a new database with name 'nextcloud'
      mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: nextcloud
        state: present
    
    - name: create nextcloud user
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        priv: 'nextcloud.*:ALL,GRANT'
        user: nextcloud
        password: "{{ mysql_nextcloud_password }}"
        host: localhost
        
    # Install Redis
    
    - name: install redis
      package:
        name: redis
        state: present
    
    - name: enable and start redis
      ansible.builtin.systemd:
        state: started
        name: redis
        enabled: yes
        
    # Download and copy Nextcloud
    - name: download nextcloud
      get_url:
        url: https://download.nextcloud.com/server/releases/nextcloud-18.0.0.zip
        dest: /tmp

    - name: unzip nextcloud
      unarchive:
        src: /tmp/nextcloud-18.0.0.zip
        dest: /tmp
        remote_src: yes
      
    - name: copy nextcloud to www
      copy:
        src: /tmp/nextcloud
        dest: /var/www/html
        owner: apache
        group: apache
        remote_src: yes

    - name: create data in nextcloud
      file:
        path: /var/www/html/nextcloud/data
        owner: apache
        group: apache
        state: directory
        
    - name: enable and start httpd
      ansible.builtin.systemd:
        state: restarted
        name: httpd
        enabled: yes
      
    # Configure Firewalld
    - name: permit traffic in default zone for https service
      ansible.posix.firewalld:
        zone: public
        service: http
        permanent: yes
        state: enabled
        
    # Set Selinux configuration
    - name: Allow apache to modify files in '/var/www/html/nextcloud/data(/.*)?'
      community.general.sefcontext:
        target: '/var/www/html/nextcloud/data(/.*)?'
        setype: httpd_sys_rw_content_t
        state: present
        
    - name: Allow apache to modify files in '/var/www/html/nextcloud/config(/.*)?'
      community.general.sefcontext:
        target: '/var/www/html/nextcloud/config(/.*)?'
        setype: httpd_sys_rw_content_t
        state: present
    
    - name: Allow apache to modify files in '/var/www/html/nextcloud/apps(/.*)?'
      community.general.sefcontext:
        target: '/var/www/html/nextcloud/apps(/.*)?'
        setype: httpd_sys_rw_content_t
        state: present
    
    - name: Allow apache to modify files in '/var/www/html/nextcloud/.htaccess'
      community.general.sefcontext:
        target: '/var/www/html/nextcloud/.htaccess'
        setype: httpd_sys_rw_content_t
        state: present
    
    - name: Allow apache to modify files in '/var/www/html/nextcloud/.user.ini'
      community.general.sefcontext:
        target: '/var/www/html/nextcloud/.user.ini'
        setype: httpd_sys_rw_content_t
        state: present
    
    - name: Allow apache to modify files in '/var/www/html/nextcloud/3rdparty/aws/aws-sdk-php/src/data/logs(/.*)?'
      community.general.sefcontext:
        target: '/var/www/html/nextcloud/3rdparty/aws/aws-sdk-php/src/data/logs(/.*)?'
        setype: httpd_sys_rw_content_t
        state: present
    
    - name: Apply new SELinux file context to filesystem
      ansible.builtin.command: restorecon -R "/var/www/html/nextcloud/"
      
    - name: Set httpd_can_network_connect flag on and keep it persistent across reboots
      ansible.posix.seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes


    
    
